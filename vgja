<!DOCTYPE html><html lang="ja"><head><meta charset="utf-8"/><title>Service Guide</title><base href="/"/><script>if (document.domain == "dsg.boar.work") {
        var debugmodeflag = 0;
        var baseurl = "https://dsg.boar.work/";
        var login_site = "https://login.boar.work/?webloginmode=lo";
      } else if (document.domain == "dsg.vgjas.com") {
        var debugmodeflag = 0;
        var baseurl = "https://dsg.vgjas.com/";
        var login_site = "https://login.vgjas.com/?webloginmode=lo";
      } else {
        var debugmodeflag = 1;
        var baseurl = "https://dsg.boar.work/";
        var login_site = "https://login.boar.work/?webloginmode=lo";
      }</script><!-- Google Tag Manager --><script>(function(w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({
          "gtm.start": new Date().getTime(),
          event: "gtm.js"
        });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-M2ZPP58");</script><!-- End Google Tag Manager --><script>function pushGTMlookScreen(screenurl) {
        dataLayer = dataLayer || [];
        dataLayer.push({
          trackPageview: screenurl,
          title: "第三階層",
          event: "loadready"
        });
      }</script><script src="assets/js/jquery-3.2.1.min.js"></script><script src="assets/js/jquery-ui.js"></script><script src="assets/js/jquery.fittext.js"></script><script src="assets/js/jquery.rwdImageMaps.js"></script><script src="assets/js/jquery.magnific-popup.js"></script><!-- Hammer JS --><!--<script src="assets/js/hammer.js"></script>--><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no,minimal-ui"/><meta name="apple-mobile-web-app-capable" content="yes"/><meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"/><link rel="icon" type="image/x-icon" href="favicon.ico"/><link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.no-icons.min.css" rel="stylesheet"/><link href="//netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.css" rel="stylesheet"/><link href="assets/css/magnific-popup.css" rel="stylesheet"/><link href="assets/css/swiper.css" rel="stylesheet"/><link href="styles.a467d0bb82469a673ad1.bundle.css" rel="stylesheet"/></head><body><app-root></app-root><script type="text/javascript" src="inline.8c6f146e0d59417b787c.bundle.js"></script><script type="text/javascript" src="polyfills.900aaf0d520c2ec873a7.bundle.js"></script><script type="text/javascript" src="scripts.f4e68bf40bdd7a50f1d1.bundle.js"></script><script type="text/javascript" src="vendor.56dac31a417a4d715b2b.bundle.js"></script><script type="text/javascript" src="main.3c05bf1d97c9a46fd9dd.bundle.js"></script></body><script src="assets/js/jquery-3.2.1.min.js"></script><script src="assets/js/jquery-ui.js"></script><script src="assets/js/jquery.fittext.js"></script><script src="assets/js/jquery.rwdImageMaps.js"></script><script src="assets/js/jquery.magnific-popup.js"></script><script src="assets/js/jquery.cookie.min.js"></script><script src="assets/js/spritespin.js"></script><script src="assets/js/pinch-zoom.js"></script><script src="assets/js/swiper.js"></script><script>// 第三階層登場時アニメ
    function go3rdScreen(url) {
      $("#layer2rd").hide();
      $("#layer3rd").show("slide");
      // 取得すべきhtmlを取り出し
      var screenurl = url + "?ap=1";
      // var screenurl = 'https://dsg.vgjas.com/explaindata/3rd/16-01.html';
      console.log(screenurl);
      pushGTMlookScreen(screenurl);

      // var tags = document.createDocumentFragment();
      // var link = document.createElement('link');
      // link.rel = 'stylesheet';
      // link.href = baseurl + 'explaindata/3rd/shared/css/wrapstyle.css';
      // tags.appendChild(link);
      // document.getElementsByTagName('head')[0].appendChild(tags);

      // console.log(link.href);

      $("div#screen3rdmain div.wrap").load(screenurl, "html", showFunction);
    }
    function showCheck() {
      $("#function").hide();
      $("#check").show();

      $("#btncheck").attr("src", "assets/img/btn_check_on.png");
      $("#btnfunction").attr("src", "assets/img/btn_function_off.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }
    function showFunction() {
      $("#check").hide();
      $("#function").show();

      $("#btncheck").attr("src", "assets/img/btn_check_off.png");
      $("#btnfunction").attr("src", "assets/img/btn_function_on.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }
    var fromscreenflag = 0;
    var fromscreenscroll = 0;
    function go3rdScreenP2(url) {
      fromscreenflag = 1;
      fromscreenscroll = $(window).scrollTop();
      $("#layer2rd").hide();
      $("#layervwmaintenance").hide();
      $("#layer3rd").show("slide");

      $("#layer3rdbackbtn").attr("src", "assets/img/toback.png");

      // 取得すべきhtmlを取り出し
      var screenurl = url + "?ap=1";
      // var screenurl = 'https://dsg.vgjas.com/explaindata/3rd/16-01.html';
      console.log(screenurl);
      pushGTMlookScreen(screenurl);

      // var tags = document.createDocumentFragment();
      // var link = document.createElement('link');
      // link.rel = 'stylesheet';
      // link.href = baseurl + 'explaindata/3rd/shared/css/wrapstyle.css';
      // tags.appendChild(link);
      // document.getElementsByTagName('head')[0].appendChild(tags);

      // console.log(link.href);

      $("div#screen3rdmain div.wrap").load(screenurl, "html", showFunction);
    }

    function go3rdScreenP3(url) {
      fromscreenflag = 1;
      fromscreenscroll = $(window).scrollTop();
      $("#layer2rd").hide();
      $("#layervwmaintenance").hide();
      $("#layer3rd2").show("slide");

      $("#layer3rdbackbtn2").attr("src", "assets/img/toback.png");

      // 取得すべきhtmlを取り出し
      var screenurl = url + "?ap=1";
      console.log(screenurl);
      pushGTMlookScreen(screenurl);

      $("div#screen3rdmain2 div.wrap").load(screenurl, "html", showFunction);
    }

    function go2ndScreen() {
      $("#layer3rdbackbtn").attr("src", "assets/img/totop.png");

      $("#layer3rd").hide();
      $("#layer3rdvw").hide();
      $("#layer3rd2").hide();
      if (fromscreenflag == 1) {
        $("#layervwmaintenance").show();
        // $("#maintenance_table").animate({scrollTop:$('.open').offset().top-scrollsize});
        $(window).scrollTop(fromscreenscroll);

        fromscreenflag = 0;
      } else {
        $("#layer2rd").show("slide");
      }

      // クリッカブルマップのレスポンシブ調整
      $("img[usemap]").rwdImageMaps();
    }

    function go2ndScreen13() {
      $("#layer3rd").hide();
      $("#layer3rdvw").hide();

      $("#layer2rd").show("slide");

      var fromscreenscroll = $("#screenscroll").val();
      $(window).scrollTop(fromscreenscroll);

      // クリッカブルマップのレスポンシブ調整
      $("img[usemap]").rwdImageMaps();
    }

    // ホイールアライメント点検登場時アニメ
    function goWheel() {
      $("#layer2rd").hide();
      $("#layer3rd").hide();
      $("#layerwheel").show("slide");
      // 取得すべきhtmlを取り出し
      var screenurl = baseurl + "explaindata/modal/wa_maintenance.html?ap=1";
      pushGTMlookScreen(screenurl);

      $("div#screenwheel div.wrap").load(screenurl, "html", firstWheelscreen);
    }

    // ホイールアライメント点検のボタンの状態をすべてoff
    function changeWheelBtnOff() {
      $("#wheelscreen01").hide();
      $("#wheelscreen02").hide();

      $("#btnwheelscreen01").attr("src", "assets/img/btn_alignment_off.png");
      $("#btnwheelscreen02").attr("src", "assets/img/btn_vw_tool_off.png");
    }

    // ホイールアライメント点検の初期状態の画面表示
    function firstWheelscreen() {
      $("#wheelscreen01").show();
      $("#wheelscreen02").hide();

      $("#btnwheelscreen01").attr("src", "assets/img/btn_alignment_on.png");
      $("#btnwheelscreen02").attr("src", "assets/img/btn_vw_tool_off.png");
    }

    // ホイールアライメント点検の画面1描画
    function goWheelScreen01() {
      changeWheelBtnOff();
      $("#wheelscreen01").show();
      $("#btnwheelscreen01").attr("src", "assets/img/btn_alignment_on.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }

    // ホイールアライメント点検の画面2描画
    function goWheelScreen02() {
      changeWheelBtnOff();
      $("#wheelscreen02").show();
      $("#btnwheelscreen02").attr("src", "assets/img/btn_vw_tool_on.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }

    // ホイールアライメント点検から戻るボタンをおした時
    function go2ndScreenFromeWheel() {
      $("#layer2rd").hide();
      $("#layerwheel").hide();
      $("#layer3rd").show("slide");

      // クリッカブルマップのレスポンシブ調整
      $("img[usemap]").rwdImageMaps();
    }

    function showSystemCalibration() {
      $("#function").hide();
      $("#check").show();

      $("#btncheck").attr("src", "assets/img/btn_calibration_on.png");
      $("#btnfunction").attr("src", "assets/img/btn_detail_off.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }
    function showSystemDetail() {
      $("#check").hide();
      $("#function").show();

      $("#btncheck").attr("src", "assets/img/btn_calibration_off.png");
      $("#btnfunction").attr("src", "assets/img/btn_detail_on.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }

    function showCheckObd() {
      $(".function").hide();
      $(".check").show();

      $("#btncheckobd").attr("src", "assets/img/btn_check_on.png");
      $("#btnfunctionobd").attr("src", "assets/img/btn_function_off.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }
    function showFunctionObd() {
      $(".check").hide();
      $(".function").show();

      $("#btncheckobd").attr("src", "assets/img/btn_check_off.png");
      $("#btnfunctionobd").attr("src", "assets/img/btn_function_on.png");

      // スクロールしてもトップに戻る
      $(window).scrollTop(0);
    }

    function go2ndScreenReset() {
      window.location.reload();
    }</script><script>// 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement("script");

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName("script")[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player = [];
    var ytPlaying, ytStop, ytPlay;

    // function onYouTubeIframeAPIReady() {
    // 	// iFrameが準備できたらビデオを再生
    // 	for (var key in movieList) {
    // 		playFirstVideo(movieList[key],key);
    // 	}
    // }

    function buildYouTube() {
      for (var key in movieList) {
        playFirstVideo(movieList[key], key);
      }
    }

    function playFirstVideo(movie, target) {
      // playerの準備
      player[target] = new YT.Player(target, {
        videoId: movie,
        height: "219",
        width: "389",
        playerVars: {
          controls: false,
          disablekb: true,
          showinfo: false,
          rel: false,
          enablejsapi: true,
          listType: "playlist",
          cc_load_policy: false,
          // wmode: 'transparent', //z-indexを有効にする
          loop: true,
          playlist: movie
        },
        events: {
          // 'onReady': onPlayerReady,
          onStateChange: onPlayerStateChange
        }
      });
      // // z-indexには気をつけろ。
      // $('iframe').css('z-index',-999);
    }

    function onPlayerReady(e) {
      e.target.playVideo();
    }

    // プレーヤーの状態に変化があった時に実行
    function onPlayerStateChange(e) {
      // 各プレーヤーの状態を確認
      for (var key in movieList) {
        var thisState = player[key].getPlayerState();
        if (thisState == 1 && ytPlaying == undefined) {
          ytPlaying = key;
        } else if (thisState == 1 && ytPlaying != key) {
          ytStop = ytPlaying;
          ytPlay = key;
        }
      }
      // 同時再生があった場合、元々再生していた方を停止する
      if (ytStop != undefined) {
        player[ytStop].pauseVideo();
        ytStop = undefined;
      }
      // 現在再生中のプレーヤー番号を保存しておく
      if (ytPlay != undefined) {
        ytPlaying = ytPlay;
        ytPlay = undefined;
      }

      var nowstate = player[ytPlaying].getPlayerState();
      if (nowstate == 0) {
        player[ytPlaying].playVideo();
      }
    }</script><script>checkurl = baseurl+'explaindata/logincheck.html';
  // URLを取得
  var nowurl = new URL(window.location.href);

  // URLSearchParamsオブジェクトを取得
  var addparams = '';
  var getparams = nowurl.searchParams;
  if (getparams.get('logined_code') !== undefined && getparams.get('logined_code') !== '' && getparams.get('logined_code') !== null) {
    addparams = '?logined_code=' + getparams.get('logined_code');
    var date = new Date();
    date.setTime( date.getTime() + ( 60*60*24 * 1000 ));
    $.cookie('logined_code', getparams.get('logined_code'), { expires: date , path:'/' });
  } else {
    var logined_code = $.cookie('logined_code');
    if (logined_code !== undefined && logined_code !== ''){
      addparams = '?logined_code=' + logined_code;
    }
  }
  checkurl = checkurl + addparams;

  //JSONファイル読み込み開始
  $.ajax({
    url:checkurl,
    cache:false,
    dataType:"json",
    success:function(json){
      console.log(json);
      result = json.Result;
      if (result === 'NG') {
        console.log('NG');
        // $.cookie('logined_code', '');
        if (debugmodeflag !== 1) location.href = login_site;
      }
    },
    error : function (XMLHttpRequest, textStatus, errorThrown) {
      console.log(XMLHttpRequest); // XMLHttpRequestオブジェクト
      console.log(XMLHttpRequest.responseText); // XMLHttpRequestオブジェクト
      console.log(textStatus); // status は、リクエスト結果を表す文字列
      console.log(errorThrown); // errorThrown は、例外オブジェクト
      location.href = login_site;
    }
  });</script></html>